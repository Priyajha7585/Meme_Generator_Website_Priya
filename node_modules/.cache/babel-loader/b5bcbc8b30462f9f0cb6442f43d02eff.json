{"ast":null,"code":"var _jsxFileName = \"/home/priya/priya1/Day1_33_React/react_router/priya1_1/src/Component/Meme1.js\";\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// export default function Meme1() {\n//     let im1=\"\";\n//     return (\n//         <div style={{textAlign:'center'}}>\n//             <form>\n//                 <h1></h1>\n//                 <label className=\"name\">UserName</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"pass\">Password</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"text1\">Text1</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"text2\">Text2</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <Link to=\"/res\"><button className=\"btn1\">Click here</button></Link><br /><br />\n//                 <img src=\"\" alt=\"No image\"/>\n//             </form>\n//         </div>\n//     )\n// }\n// Import React (Mandatory Step).\nimport React from \"react\"; // MemeGenerator component to generate a meme\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Meme1 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      allMemeImgs: [],\n      randomImg: \"\"\n    };\n\n    this.handleChange = event => {\n      // Destructuring the event. target object\n      const {\n        name,\n        value\n      } = event.target; // Updating the state variable\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        allMemeImgs\n      } = this.state;\n      const rand = allMemeImgs[Math.floor(Math.random() * allMemeImgs.length)].url;\n      this.setState({\n        randomImg: rand\n      });\n    };\n  }\n\n  // componentDidMount() method to fetch\n  // images from the API\n  componentDidMount() {\n    // Fetching data from the API\n    fetch(\"https://api.imgflip.com/get_memes\") // Converting the promise recieved into JSON\n    .then(response => response.json()).then(content => // Updating state variables\n    this.setState({\n      allMemeImgs: content.data.memes\n    }));\n  } // Method to change the value of input fields\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"// Controlled form\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        children: [\"// Input field to get First text\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Text\",\n          type: \"text\",\n          value: this.state.topText,\n          name: \"topText\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 3\n        }, this), \"// Input field to get Lsst text\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Text\",\n          type: \"text\",\n          value: this.state.bottomText,\n          name: \"bottomText\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 3\n        }, this), \"// Button to generate meme\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [\"// Only show the below elements when the image is ready to be displayed\", this.state.randomImg === \"\" ? \"\" : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImg,\n          alt: \"meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 4\n        }, this), this.state.randomImg === \"\" ? \"\" : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 4\n        }, this), this.state.randomImg === \"\" ? \"\" : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nexport default Meme1;","map":{"version":3,"sources":["/home/priya/priya1/Day1_33_React/react_router/priya1_1/src/Component/Meme1.js"],"names":["React","Meme1","Component","state","topText","bottomText","allMemeImgs","randomImg","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","rand","Math","floor","random","length","url","componentDidMount","fetch","then","response","json","content","data","memes","render"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// export default function Meme1() {\n//     let im1=\"\";\n//     return (\n        \n//         <div style={{textAlign:'center'}}>\n//             <form>\n//                 <h1></h1>\n//                 <label className=\"name\">UserName</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"pass\">Password</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"text1\">Text1</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <label className=\"text2\">Text2</label>\n//                 <input type=\"text\" /><br /><br />\n//                 <Link to=\"/res\"><button className=\"btn1\">Click here</button></Link><br /><br />\n//                 <img src=\"\" alt=\"No image\"/>\n//             </form>\n//         </div>\n//     )\n// }\n\n\n// Import React (Mandatory Step).\nimport React from \"react\";\n\n// MemeGenerator component to generate a meme\nclass Meme1 extends React.Component {\nstate = {\n\ttopText: \"\",\n\tbottomText: \"\",\n\tallMemeImgs: [],\n\trandomImg: \"\"\n};\n\n// componentDidMount() method to fetch\n// images from the API\ncomponentDidMount() {\n\t\n\t// Fetching data from the API\n\tfetch(\"https://api.imgflip.com/get_memes\")\n\t// Converting the promise recieved into JSON\n\t.then(response => response.json())\n\t.then(content =>\n\t\t// Updating state variables\n\t\tthis.setState({\n\t\tallMemeImgs: content.data.memes\n\t\t})\n\t);\n}\n\n// Method to change the value of input fields\nhandleChange = event => {\n\t// Destructuring the event. target object\n\tconst { name, value } = event.target;\n\t\n\t// Updating the state variable\n\tthis.setState({\n\t[name]: value\n\t});\n};\n\n// Method to submit from and create meme\nhandleSubmit = event => {\n\tevent.preventDefault();\n\tconst { allMemeImgs } = this.state;\n\tconst rand =\n\tallMemeImgs[Math.floor(Math.random()\n\t* allMemeImgs.length)].url;\n\tthis.setState({\n\trandomImg: rand\n\t});\n};\n\nrender() {\n\treturn (\n\t<div>\n\t\t// Controlled form\n\t\t<form className=\"meme-form\" onSubmit={this.handleSubmit}>\n\t\t// Input field to get First text\n\t\t<input\n\t\t\tplaceholder=\"Enter Text\"\n\t\t\ttype=\"text\"\n\t\t\tvalue={this.state.topText}\n\t\t\tname=\"topText\"\n\t\t\tonChange={this.handleChange}\n\t\t/>\n\t\t// Input field to get Lsst text\n\t\t<input\n\t\t\tplaceholder=\"Enter Text\"\n\t\t\ttype=\"text\"\n\t\t\tvalue={this.state.bottomText}\n\t\t\tname=\"bottomText\"\n\t\t\tonChange={this.handleChange}\n\t\t/>\n\t\t// Button to generate meme\n\t\t<button>Generate</button>\n\t\t</form>\n\n\t\t<br />\n\t\t<div className=\"meme\">\n\t\t// Only show the below elements when the image is ready to be displayed\n\t\t{this.state.randomImg === \"\" ? \"\" :\n\t\t\t<img src={this.state.randomImg} alt=\"meme\" />}\n\t\t{this.state.randomImg === \"\" ? \"\" :\n\t\t\t<h2 className=\"top\">{this.state.topText}</h2>}\n\t\t{this.state.randomImg === \"\" ? \"\" :\n\t\t\t<h2 className=\"bottom\">{this.state.bottomText}</h2>}\n\t\t</div>\n\t</div>\n\t);\n}\n}\n\nexport default Meme1;\n\n\n"]},"metadata":{},"sourceType":"module"}