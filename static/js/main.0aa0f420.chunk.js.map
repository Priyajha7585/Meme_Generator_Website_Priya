{"version":3,"sources":["Component/Meme2.js","Component/Meme1.js","App.js","reportWebVitals.js","index.js"],"names":["Meme2","props","style","height","width","src","url","alt","Meme1","handleChange","event","target","name","value","setState","afterButtonClick","data","template_id","state","ids","username","password","text0","topText","text1","bottomText","show","fetch","method","body","URLSearchParams","then","res","json","console","log","textAlign","type","id","className","placeholder","onChange","this","onClick","React","Component","App","items","isLoaded","memes","to","map","item","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.0aa0f420.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Meme2 = (props) => {\n  return (\n    <>\n      <h2>Here is the meme you generated</h2>\n      <img\n        style={{height:250+'px', width: 250+'px' }}\n        src={props.url}\n        alt=\"No Image\"\n      />\n    </>\n  )\n}\nexport default Meme2;   \n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Meme2 from \"./Meme2\";\n// import MemeResult from \"./MemeResult\";\nimport './Style.css';\n\n\nexport default class Meme1 extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      ids: \"\",\n      username: \"Priya_Jha\",\n      password: \"Sambhavi7585@\",\n      topText: \"\",\n      bottomText: \"\",\n      url: \"\",\n      show: false\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  afterButtonClick = () => {\n    const data = {\n      template_id: this.state.ids,\n      username: this.state.username,\n      password: this.state.password,\n      text0: this.state.topText,\n      text1: this.state.bottomText\n      \n    };\n    this.setState({\n        show: true\n    });\n\n    fetch(\"https://api.imgflip.com/caption_image?\", {\n      method: \"POST\",\n      body: new URLSearchParams(data)\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          url: json.data.url\n        });\n        console.log(this.state.url);\n      });\n  };\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <form>\n          <h1>Enter your details:</h1>\n\n          <input\n            type=\"text\"\n            id=\"ids\"\n            name=\"ids\"\n            className=\"input1\"\n            placeholder=\"Enter Template_Id\"\n            onChange={this.handleChange}\n          />\n          <br /><br />\n\n          <input\n            type=\"text\"\n            id=\"topText\"\n            name=\"topText\"\n            className=\"input1\"\n            placeholder=\"Enter topText\"\n            onChange={this.handleChange}\n          />\n          <br /><br />\n\n          <input\n            type=\"text\"\n            id=\"bottomText\"\n            name=\"bottomText\"\n            className=\"input1\"\n            placeholder=\"Enter bottomText\"\n            onChange={this.handleChange}\n          />\n          <br /><br />\n\n          <button type=\"button\" className=\"btn1\" onClick={this.afterButtonClick}>\n            Click Now\n          </button>\n          <img />\n        </form>\n        <div>{this.state.show && <Meme2 url={this.state.url}/>}</div>\n        \n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Meme1 from './Component/Meme1';\nimport './Component/Style.css';\nclass App extends React.Component {\n    // Constructor\n    constructor()\n    {\n        super()\n        this.state = {\n            items:[],\n            isLoaded:false\n        }\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\").then((res) => res.json()).then((json) => {\n            this.setState({\n                items:json.data.memes,\n                isLoaded:true\n            })\n        });\n    }\n\n    render(){\n        const {isLoaded, items} = this.state;\n        if(isLoaded)\n        {\n            console.log(items);\n            return (\n                <div style={{ textAlign: \"center\" }}>\n                    <h1>MEMES GENERATOR : BY PRIYA JHA<br />\n                    <Link to=\"/meme\"><button className='btn1'>CLICK HERE</button></Link></h1>\n                    \n                    \n                    {\n                        items.map((item)=>(\n                          <Link to=\"/meme\" className=\"\" key={item.id}>\n                            <img  key={item.id} src={item.url} alt={item.name} style={{height:200+'px',width:200+'px',margin:20+'px'}}/>\n                          </Link>\n                        ))\n                    }\n                </div>);\n        }\n        else\n            return <h1>Loading...</h1>\n    }\n}\nexport default App;\n\t\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Meme1 from './Component/Meme1';\nimport Meme2 from './Component/Meme2';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}/>\n      <Route path=\"/home\" element={<App />} />\n      <Route path=\"/meme\" element={<Meme1 />}/>\n      <Route path=\"/res\" element={<Meme2 />} />\n\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}